文件列表部分

大致思路：
方法极差已经弃用

比较简略但似乎更合适的方法：
载入文件时比较当前列表中所选择的文件和目前需要播放的文件是否一致
一致则直接播放，不一致则更新列表并选中当前项
这样的做法只需要添加PlayList::addFormFloder(QString filePath)就行了
ps.现在已经实现了，但是为了在载入列表时定位当前播放的文件所在列表中的位置，添加了justSearch函数。

需要做的事情：
              关于mini界面，设置当前播放顺序和状态的按钮改掉，换成隐藏标题栏
【Done】然后加上mini界面的进度条（鼠标经过按钮时显示。
              右下托盘设置为可以完全隐藏mini界面
【Done】遍历子文件夹功能
【Done】顺便，给混响加上鼠标停留提示

这是一个递归的例子，但现在程序代码里用的是迭代器方式
bool FindFile(const QString & path) 
{  
QDir dir(path); 
if (!dir.exists())  
return false;
dir.setFilter(QDir::Dirs|QDir::Files); 
dir.setSorting(QDir::DirsFirst); 
QFileInfoList list = dir.entryInfoList(); 
int i=0; 
do{  
QFileInfo fileInfo = list.at(i);  
if(fileInfo.fileName()=="."|fileInfo.fileName()=="..")
{ 
i++; 
continue; 
}  
bool bisDir=fileInfo.isDir(); 
if(bisDir) 
{  
nFiles++;  
std::cout << qPrintable(QString("%1 %2 %3").arg(fileInfo.size(), 10) 
.arg(fileInfo.fileName(),10).arg(fileInfo.path()))<<endl; 
FindFile(fileInfo.filePath()); 
}
else{ 
nFiles++;  
std::cout << qPrintable(QString("%1 %2 %3").arg(fileInfo.size(), 10) 
.arg(fileInfo.fileName(),10).arg(fileInfo.path()))<<endl; 
} 
i++;  
}while(i<list.size());  
return true; 
}  
